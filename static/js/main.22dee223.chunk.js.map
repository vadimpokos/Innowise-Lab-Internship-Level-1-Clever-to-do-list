{"version":3,"sources":["constants/routePaths.js","utils/notification.js","constants/reduxTypes.js","firebase/firebase.js","redux/appReducer/actions.js","redux/todosReducer/actions.js","components/LogOutButton/index.jsx","redux/userReducer/actions.js","utils/dateCompare.js","components/TaskBadge/index.jsx","constants/calendar.js","components/CalendarItem/index.jsx","redux/dateReducer/actions.js","components/Calendar/index.jsx","components/Loader/index.jsx","components/NewToDo/index.jsx","components/ToDoStatus/index.jsx","components/ToDoItem/index.jsx","components/ToDoList/index.jsx","components/Main/index.jsx","router/AppRouter.jsx","configs/authFormConfig.js","components/Auth/SignUp/index.jsx","components/Auth/SignIn/index.jsx","router/AuthRouter.jsx","router/Router.jsx","App.js","redux/appReducer/reducer.js","redux/dateReducer/reducer.js","redux/todosReducer/reducer.js","redux/userReducer/reducer.js","redux/rootReducer.js","redux/appStore.js","services/localStorage/index.js","index.js"],"names":["PATH_ROUTES","openNotification","type","message","description","placement","notification","GET_TODOS","ADD_TODO","DELETE_TODO","CLEAR_TODOS","UPDATE_TODO","SET_ISLOADING","LOGIN","LOGOUT","SIGN_UP","CONFIRM_ERROR","FOCUS","CHANGE_DATE","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","changeFocus","id","payload","getTodos","uid","dispatch","a","response","collection","where","todos","get","then","querySnapshot","forEach","doc","data","firestoreId","catch","e","updateToDo","todo","title","status","newToDo","date","update","error","LogOutButtonComponent","useDispatch","onClick","auth","signOut","LogOutButton","React","memo","dateCompare","firstDate","secondDate","Date","getDate","getMonth","TasksBadgeComponent","day","useSelector","state","completedTasks","filter","item","seconds","pendingTasks","length","className","text","TasksBadge","WEEK_DAYS","MONTH_NAMES","CalendarItemComponent","newDate","Meta","find","_","index","getDay","today","color","CalendarItem","CalendarComponent","useState","lastDayToDisplay","setMonth","daysValues","days","push","setDate","fillDays","map","Calendar","LoaderComponent","antIcon","LoadingOutlined","spin","indicator","Loader","NewToDoFormComponent","newTitle","setNewTitle","newDesc","setNewDesc","userInfo","Item","label","onChange","target","value","TextArea","getTime","add","addToDo","selectedDate","NewToDoForm","StatusComponent","shape","icon","CheckOutlined","Status","Todo","updateTitle","setUpdateTitle","updateDesc","setUpdateDesc","focusedId","app","danger","docId","delete","console","log","ToDoListComponent","ToDoList","MainComponent","isLoading","useEffect","toDateString","Main","AppRouterComponent","path","useRouteMatch","exact","component","AppRouter","AUTH_FORM_CONFIG","name","basic","username","password","confirm_password","remember","Username","Password","Confirm","labelCol","Form","span","wrapperCol","Form_Item","offset","initialValues","rules","required","valuePropName","checked","primary","htmlType","submit","SignUpComponent","email","setEmail","setPassword","confirmPassword","setConfirmPassword","confirm","createUserWithEmailAndPassword","userCredential","user","createUserWithEmail","to","SignUp","SignInComponent","match","signInWithEmailAndPassword","loginEmail","SignIn","AuthRouterComponent","AuthRouter","ToDoRouterComponent","history","render","ToDoRouter","App","initialState","rootReducer","combineReducers","action","slice","findIndex","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.22dee223.chunk.js","sourcesContent":["export const PATH_ROUTES = {\r\n  APP: '/app',\r\n  AUTH: '/auth',\r\n  MAIN: '/',\r\n}\r\n","import { notification } from 'antd'\r\n\r\nexport const openNotification = ({\r\n  type,\r\n  message,\r\n  description,\r\n  placement = 'bottomLeft',\r\n}) => {\r\n  notification[type]({\r\n    message,\r\n    description,\r\n    placement,\r\n  })\r\n}\r\n","export const GET_TODOS = 'DATA/GET_TODOS'\r\nexport const ADD_TODO = 'DATA/ADD_TODO'\r\nexport const DELETE_TODO = 'DATA/DELETE_TODO'\r\nexport const CLEAR_TODOS = 'DATA/CLEAR_TODOS'\r\nexport const UPDATE_TODO = 'DATA/UPDATE_TODOS'\r\nexport const SET_ISLOADING = 'DATA/SET_ISLOADING'\r\nexport const LOGIN = 'USER/LOGIN'\r\nexport const LOGOUT = 'USER/LOGOUT'\r\nexport const SIGN_UP = 'USER/SIGN_UP'\r\nexport const CONFIRM_ERROR = 'USER/CONFIRM_ERROR'\r\nexport const FOCUS = 'APP/FOCUS'\r\nexport const CHANGE_DATE = 'DATE/CHANGE_DATE'\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nexport const db = firebase.firestore()\r\n","import { FOCUS, SET_ISLOADING } from '../../constants/reduxTypes'\r\n\r\nexport function changeFocus(id) {\r\n  return {\r\n    type: FOCUS,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nexport function showLoading() {\r\n  return {\r\n    type: SET_ISLOADING,\r\n    payload: true,\r\n  }\r\n}\r\n\r\nexport function hideLoading() {\r\n  return {\r\n    type: SET_ISLOADING,\r\n    payload: false,\r\n  }\r\n}\r\n","import { db } from '../../firebase/firebase'\r\nimport {\r\n  ADD_TODO,\r\n  CLEAR_TODOS,\r\n  DELETE_TODO,\r\n  GET_TODOS,\r\n  UPDATE_TODO,\r\n} from '../../constants/reduxTypes'\r\nimport { openNotification } from '../../utils/notification'\r\nimport { hideLoading, showLoading } from '../appReducer/actions'\r\n\r\nexport function getTodos(uid) {\r\n  return async (dispatch) => {\r\n    dispatch(showLoading())\r\n    const response = db.collection('todos').where('uid', '==', uid)\r\n    let todos = []\r\n    try {\r\n      await response\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            todos = [...todos, { ...doc.data(), firestoreId: doc.id }]\r\n          })\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: GET_TODOS, payload: todos })\r\n          dispatch(hideLoading())\r\n        })\r\n        .catch((e) => {\r\n          throw e\r\n        })\r\n    } catch (e) {\r\n      openNotification('error', 'Error loading data', e.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addToDo(title, description, uid, day) {\r\n  return async (dispatch) => {\r\n    const response = db.collection('todos')\r\n    const todo = {\r\n      title: title,\r\n      id: new Date().getTime(),\r\n      description: description,\r\n      uid: uid,\r\n      status: 'inprogress',\r\n      date: day,\r\n    }\r\n    try {\r\n      await response\r\n        .add(todo)\r\n        .then(() => {\r\n          dispatch({ type: ADD_TODO, payload: todo })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      openNotification({\r\n        type: 'error',\r\n        message: 'Error adding document',\r\n        description: e.message,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateToDo(todo, title, description, status) {\r\n  return async (dispatch) => {\r\n    const response = db.collection('todos')\r\n    const newToDo = {\r\n      title: title,\r\n      description: description,\r\n      id: todo.id,\r\n      uid: todo.uid,\r\n      firestoreId: todo.firestoreId,\r\n      status: status,\r\n      date: todo.date,\r\n    }\r\n    try {\r\n      await response\r\n        .doc(todo.firestoreId)\r\n        .update({\r\n          title: title,\r\n          description: description,\r\n          status: status,\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: UPDATE_TODO, payload: newToDo })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      openNotification({\r\n        type: 'error',\r\n        message: 'Error updating document',\r\n        description: e.message,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteToDo(docId, id) {\r\n  return async (dispatch) => {\r\n    const response = db.collection('todos')\r\n    try {\r\n      await response\r\n        .doc(docId)\r\n        .delete()\r\n        .then(() => {\r\n          openNotification({ type: 'success', message: 'Task deleted' })\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: DELETE_TODO, payload: id })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      console.log(e)\r\n      openNotification({\r\n        type: 'error',\r\n        message: 'Error deleting task',\r\n        description: e.message,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function clearTodoList() {\r\n  return {\r\n    type: CLEAR_TODOS,\r\n    payload: [],\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button } from 'antd'\r\nimport { logout } from '../../redux/userReducer/actions'\r\nimport { clearTodoList } from '../../redux/todosReducer/actions'\r\n\r\nconst LogOutButtonComponent = () => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        dispatch(logout())\r\n        dispatch(clearTodoList())\r\n      }}\r\n    >\r\n      Log Out\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport const LogOutButton = React.memo(LogOutButtonComponent)\r\n","import firebase from 'firebase'\r\nimport { openNotification } from '../../utils/notification'\r\nimport {\r\n  CONFIRM_ERROR,\r\n  LOGIN,\r\n  LOGOUT,\r\n  SIGN_UP,\r\n} from '../../constants/reduxTypes'\r\n\r\nexport function loginEmail(email, password) {\r\n  return async (dispatch) => {\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        const user = userCredential.user\r\n        dispatch({ type: LOGIN, payload: user })\r\n      })\r\n      .catch((e) => {\r\n        openNotification({\r\n          type: 'error',\r\n          message: 'Error login!',\r\n          description: e.message,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  return async (dispatch) => {\r\n    try {\r\n      await firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          dispatch({ type: LOGOUT, payload: {} })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      openNotification({\r\n        type: 'error',\r\n        message: 'Error logout!',\r\n        description: e.message,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function createUserWithEmail(email, password, confirm) {\r\n  if (password === confirm) {\r\n    return async (dispatch) => {\r\n      await firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((userCredential) => {\r\n          const user = userCredential.user\r\n          dispatch({ type: SIGN_UP, payload: user })\r\n        })\r\n        .catch((e) => {\r\n          openNotification({\r\n            type: 'error',\r\n            message: 'Sign Up Error!',\r\n            description: e.message,\r\n          })\r\n        })\r\n    }\r\n  } else {\r\n    openNotification({\r\n      type: 'error',\r\n      message: 'Passwords didn`t match!',\r\n      description:\r\n        'Please, check that passwords in password and confirm fields are similar',\r\n    })\r\n    return {\r\n      type: CONFIRM_ERROR,\r\n    }\r\n  }\r\n}\r\n","const SECONDS_TO_MILLISECONDS_COEFFICIENT = 1000\r\n\r\nexport const dateCompare = (firstDate, secondDate) => {\r\n  return (\r\n    new Date(firstDate * SECONDS_TO_MILLISECONDS_COEFFICIENT).getDate() ===\r\n      secondDate.getDate() &&\r\n    new Date(firstDate * SECONDS_TO_MILLISECONDS_COEFFICIENT).getMonth() ===\r\n      secondDate.getMonth()\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Badge } from 'antd'\r\nimport './styles.css'\r\nimport { dateCompare } from '../../utils/dateCompare'\r\n\r\nconst TasksBadgeComponent = (day) => {\r\n  const todos = useSelector((state) => state.todos.todos)\r\n\r\n  const completedTasks = todos.filter((item) => {\r\n    return dateCompare(item.date.seconds, day.day) && item.status === 'done'\r\n  })\r\n\r\n  const pendingTasks = todos.filter((item) => {\r\n    return (\r\n      dateCompare(item.date.seconds, day.day) && item.status === 'inprogress'\r\n    )\r\n  })\r\n\r\n  return completedTasks.length || pendingTasks.length ? (\r\n    <div className='badges-wrapper'>\r\n      <Badge status='success' text={completedTasks.length} />\r\n      <Badge status='default' text={pendingTasks.length} />\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport const TasksBadge = React.memo(TasksBadgeComponent)\r\n","export const WEEK_DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\nexport const MONTH_NAMES = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n]\r\n","import React from 'react'\r\nimport { Card, Tag } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeDate } from '../../redux/dateReducer/actions'\r\nimport { TasksBadge } from '../TaskBadge'\r\nimport { WEEK_DAYS, MONTH_NAMES } from '../../constants/calendar'\r\n\r\nconst CalendarItemComponent = (day) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleItemClick = () => {\r\n    dispatch(changeDate(day.day))\r\n  }\r\n\r\n  return (\r\n    <Card className='calendar-item' onClick={handleItemClick}>\r\n      <Card.Meta\r\n        title={day.day.getDate()}\r\n        description={MONTH_NAMES.find(\r\n          (_, index) => index === day.day.getMonth()\r\n        )}\r\n      />\r\n      <div>{WEEK_DAYS.find((_, index) => index === day.day.getDay())}</div>\r\n      <TasksBadge day={day.day} />\r\n      {day.day.getDate() === day.today.getDate() &&\r\n      day.day.getMonth() === day.today.getMonth() ? (\r\n        <Tag color='purple'>Today</Tag>\r\n      ) : null}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport const CalendarItem = React.memo(CalendarItemComponent)\r\n","import { CHANGE_DATE } from '../../constants/reduxTypes'\r\n\r\nexport function changeDate(newDate) {\r\n  return {\r\n    type: CHANGE_DATE,\r\n    payload: newDate,\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport './styles.css'\r\nimport { CalendarItem } from '../CalendarItem'\r\n\r\nconst CalendarComponent = () => {\r\n  const [today] = useState(new Date())\r\n  const [lastDayToDisplay] = useState(new Date())\r\n\r\n  lastDayToDisplay.setMonth(today.getMonth() + 1)\r\n\r\n  const fillDays = () => {\r\n    const days = []\r\n    const day = new Date(today)\r\n    do {\r\n      days.push(new Date(day))\r\n      day.setDate(day.getDate() + 1)\r\n    } while (\r\n      day.getMonth() !== lastDayToDisplay.getMonth() ||\r\n      day.getDate() <= lastDayToDisplay.getDate()\r\n    )\r\n    return days\r\n  }\r\n  const daysValues = fillDays()\r\n\r\n  return (\r\n    <div className='calendar_wrapper'>\r\n      {daysValues.map((item, index) => (\r\n        <CalendarItem key={index} day={item} today={today} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Calendar = React.memo(CalendarComponent)\r\n","import React from 'react'\r\nimport { Spin } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport './styles.css'\r\n\r\nconst LoaderComponent = () => {\r\n  const antIcon = <LoadingOutlined className='loader' spin />\r\n\r\n  return <Spin indicator={antIcon} />\r\n}\r\n\r\nexport const Loader = React.memo(LoaderComponent)\r\n","import './styles.css'\r\nimport React, { useState } from 'react'\r\nimport { Input, Button, Form } from 'antd'\r\nimport { addToDo, getTodos } from '../../redux/todosReducer/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openNotification } from '../../utils/notification'\r\n\r\nconst NewToDoFormComponent = () => {\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newDesc, setNewDesc] = useState('')\r\n  const uid = useSelector((state) => state.userInfo.userInfo.uid)\r\n  const date = useSelector((state) => state.date)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleTitleInput = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n  const handleDescriptionInput = (e) => {\r\n    setNewDesc(e.target.value)\r\n  }\r\n\r\n  const handleAddButton = () => {\r\n    if (!newTitle || !newDesc) {\r\n      openNotification({\r\n        type: 'warning',\r\n        message: 'Missing required field',\r\n      })\r\n    } else {\r\n      dispatch(addToDo(newTitle, newDesc, uid, date.selectedDate))\r\n      dispatch(getTodos(uid))\r\n      setNewTitle('')\r\n      setNewDesc('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='form-wrapper'>\r\n      <div className='form-container'>\r\n        <Form>\r\n          <h1>Add To Do</h1>\r\n          <Form.Item label='Title'>\r\n            <Input onChange={handleTitleInput} value={newTitle} />\r\n          </Form.Item>\r\n          <Form.Item label='Description'>\r\n            <Input.TextArea onChange={handleDescriptionInput} value={newDesc} />\r\n          </Form.Item>\r\n          <Button onClick={handleAddButton}>Add new</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NewToDoForm = React.memo(NewToDoFormComponent)\r\n","import React from 'react'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\nimport { Badge, Button } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateToDo } from '../../redux/todosReducer/actions'\r\n\r\nexport const StatusComponent = (todo) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleCompleteButton = () => {\r\n    dispatch(\r\n      updateToDo(todo.todo, todo.todo.title, todo.todo.description, 'done')\r\n    )\r\n  }\r\n\r\n  if (todo.todo.status === 'inprogress') {\r\n    return (\r\n      <div className='todo_status'>\r\n        <Button\r\n          className='button_done'\r\n          type='default'\r\n          shape='round'\r\n          icon={<CheckOutlined />}\r\n          onClick={handleCompleteButton}\r\n        >\r\n          Complete\r\n        </Button>\r\n        <Badge status='default' text='Active' />\r\n      </div>\r\n    )\r\n  } else if (todo.todo.status === 'done') {\r\n    return (\r\n      <div className='todo_status'>\r\n        <Badge status='success' text='Completed' />\r\n      </div>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport const Status = React.memo(StatusComponent)\r\n","import './styles.css'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Input, Button } from 'antd'\r\nimport { updateToDo, deleteToDo } from '../../redux/todosReducer/actions'\r\nimport { changeFocus } from '../../redux/appReducer/actions'\r\nimport { openNotification } from '../../utils/notification'\r\nimport { Status } from '../ToDoStatus'\r\n\r\nexport const Todo = (todo) => {\r\n  const [updateTitle, setUpdateTitle] = useState('')\r\n  const [updateDesc, setUpdateDesc] = useState('')\r\n  const dispatch = useDispatch()\r\n  const focusedId = useSelector((state) => state.app.focusedId)\r\n\r\n  const handleTitleInput = (e) => {\r\n    setUpdateTitle(e.target.value)\r\n  }\r\n\r\n  const handleDescriptionInput = (e) => {\r\n    setUpdateDesc(e.target.value)\r\n  }\r\n\r\n  const handleUpdateButton = () => {\r\n    if (!updateTitle && !updateDesc) {\r\n      openNotification({\r\n        type: 'warning',\r\n        message: 'Both fields are empty',\r\n      })\r\n    } else {\r\n      dispatch(\r\n        updateToDo(\r\n          todo.todo,\r\n          updateTitle ? updateTitle : todo.todo.title,\r\n          updateDesc ? updateDesc : todo.todo.description,\r\n          todo.todo.status\r\n        )\r\n      )\r\n      dispatch(changeFocus(''))\r\n      setUpdateTitle('')\r\n      setUpdateDesc('')\r\n    }\r\n  }\r\n\r\n  const handleHideButton = () => {\r\n    dispatch(changeFocus(''))\r\n  }\r\n\r\n  const handleDeleteButton = () => {\r\n    dispatch(deleteToDo(todo.todo.firestoreId, todo.todo.id))\r\n  }\r\n\r\n  const handleMoreButton = () => {\r\n    dispatch(changeFocus(todo.todo.id))\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Status todo={todo.todo} />\r\n      <Card.Meta title={todo.todo.title} description={todo.todo.description} />\r\n\r\n      {focusedId === todo.todo.id ? (\r\n        <>\r\n          <Input onChange={handleTitleInput} value={updateTitle} />\r\n\r\n          <Input onChange={handleDescriptionInput} value={updateDesc} />\r\n          <Button onClick={handleUpdateButton}>Update</Button>\r\n          <Button onClick={handleHideButton}>Hide</Button>\r\n          <Button type='primary' danger onClick={handleDeleteButton}>\r\n            Delete\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <Button onClick={handleMoreButton}>More</Button>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Todo } from '../ToDoItem'\r\nimport { dateCompare } from '../../utils/dateCompare'\r\n\r\nconst ToDoListComponent = () => {\r\n  const todos = useSelector((state) => state.todos.todos)\r\n\r\n  const date = useSelector((state) => state.date)\r\n\r\n  return (\r\n    <>\r\n      {todos.map((item) => {\r\n        return dateCompare(item.date.seconds, date.selectedDate) ? (\r\n          <Todo key={item.id} todo={item} />\r\n        ) : null\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const ToDoList = React.memo(ToDoListComponent)\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTodos } from '../../redux/todosReducer/actions'\r\nimport { Calendar } from '../Calendar'\r\nimport { Loader } from '../Loader'\r\nimport { NewToDoForm } from '../NewToDo'\r\nimport { ToDoList } from '../ToDoList'\r\n\r\nconst MainComponent = () => {\r\n  const dispatch = useDispatch()\r\n  const uid = useSelector((state) => state.userInfo.userInfo.uid)\r\n  const date = useSelector((state) => state.date)\r\n  const isLoading = useSelector((state) => state.app.isLoading)\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodos(uid))\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Calendar />\r\n      <h1>Tasks for {date.selectedDate.toDateString()}</h1>\r\n      {isLoading ? <Loader /> : <ToDoList />}\r\n      <NewToDoForm />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const Main = React.memo(MainComponent)\r\n","import React from 'react'\r\nimport { Route } from 'react-router'\r\nimport { useRouteMatch } from 'react-router'\r\nimport { LogOutButton } from '../components/LogOutButton/index'\r\nimport { Main } from '../components/Main'\r\n\r\nconst AppRouterComponent = () => {\r\n  const { path } = useRouteMatch()\r\n  return (\r\n    <>\r\n      <LogOutButton />\r\n      <Route exact path={path} component={Main} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const AppRouter = React.memo(AppRouterComponent)\r\n","export const AUTH_FORM_CONFIG = {\r\n  name: {\r\n    basic: 'basic',\r\n    username: 'username',\r\n    password: 'password',\r\n    confirm_password: 'confirm_password',\r\n    remember: 'remember',\r\n  },\r\n  label: {\r\n    Username: 'Username',\r\n    Password: 'Password',\r\n    Confirm: 'Confirm Password',\r\n  },\r\n  labelCol: {\r\n    Form: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    Form: {\r\n      span: 16,\r\n    },\r\n    Form_Item: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  },\r\n  initialValues: {\r\n    remember: true,\r\n  },\r\n  rules: {\r\n    Username: [\r\n      {\r\n        required: true,\r\n        message: 'Please input your username!',\r\n      },\r\n    ],\r\n    Password: [\r\n      {\r\n        required: true,\r\n        message: 'Please input your password!',\r\n      },\r\n    ],\r\n    Confirm: [\r\n      {\r\n        required: true,\r\n        message: 'Please confirm your password!',\r\n      },\r\n    ],\r\n  },\r\n  valuePropName: {\r\n    checked: 'checked',\r\n  },\r\n  type: {\r\n    primary: 'primary',\r\n  },\r\n  htmlType: {\r\n    submit: 'submit',\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { createUserWithEmail } from '../../../redux/userReducer/actions'\r\nimport { Link } from 'react-router-dom'\r\nimport '../shared/styles.css'\r\nimport { AUTH_FORM_CONFIG } from '../../../configs/authFormConfig'\r\n\r\nconst SignUpComponent = () => {\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const handleEmailInput = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleConfirmPassword = (e) => {\r\n    setConfirmPassword(e.target.value)\r\n  }\r\n\r\n  const handleSubmitButton = () => {\r\n    dispatch(createUserWithEmail(email, password, confirmPassword))\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <h1>Sign Up page</h1>\r\n      <Form\r\n        name={AUTH_FORM_CONFIG.name.basic}\r\n        labelCol={AUTH_FORM_CONFIG.labelCol.Form}\r\n        wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form}\r\n        initialValues={AUTH_FORM_CONFIG.initialValues}\r\n      >\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Username}\r\n          name={AUTH_FORM_CONFIG.name.username}\r\n          rules={AUTH_FORM_CONFIG.rules.Username}\r\n        >\r\n          <Input onChange={handleEmailInput} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Password}\r\n          name={AUTH_FORM_CONFIG.name.password}\r\n          rules={AUTH_FORM_CONFIG.rules.Password}\r\n        >\r\n          <Input.Password onChange={handlePasswordInput} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Confirm}\r\n          name={AUTH_FORM_CONFIG.name.confirm_password}\r\n          rules={AUTH_FORM_CONFIG.rules.Confirm}\r\n        >\r\n          <Input.Password onChange={handleConfirmPassword} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name={AUTH_FORM_CONFIG.name.remember}\r\n          valuePropName={AUTH_FORM_CONFIG.valuePropName.checked}\r\n          wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}\r\n        >\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}>\r\n          <Button\r\n            type={AUTH_FORM_CONFIG.type.primary}\r\n            htmlType={AUTH_FORM_CONFIG.htmlType.submit}\r\n            onClick={handleSubmitButton}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div>\r\n        Already have an account?\r\n        <Button>\r\n          <Link to='/auth'>Sign In</Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SignUp = React.memo(SignUpComponent)\r\n","import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { loginEmail } from '../../../redux/userReducer/actions'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport '../shared/styles.css'\r\nimport { AUTH_FORM_CONFIG } from '../../../configs/authFormConfig'\r\n\r\nconst SignInComponent = () => {\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const match = useRouteMatch()\r\n\r\n  const handleEmailInput = (e) => {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  const handlePasswordInput = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handleSubmitButton = () => {\r\n    dispatch(loginEmail(email, password))\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <h1>Sign In page</h1>\r\n      <Form\r\n        name={AUTH_FORM_CONFIG.name.basic}\r\n        labelCol={AUTH_FORM_CONFIG.labelCol.Form}\r\n        wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form}\r\n        initialValues={AUTH_FORM_CONFIG.initialValues}\r\n      >\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Username}\r\n          name={AUTH_FORM_CONFIG.name.username}\r\n          rules={AUTH_FORM_CONFIG.rules.Username}\r\n        >\r\n          <Input onChange={handleEmailInput} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Password}\r\n          name={AUTH_FORM_CONFIG.name.password}\r\n          rules={AUTH_FORM_CONFIG.rules.Password}\r\n        >\r\n          <Input.Password onChange={handlePasswordInput} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name={AUTH_FORM_CONFIG.name.remember}\r\n          valuePropName={AUTH_FORM_CONFIG.valuePropName.checked}\r\n          wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}\r\n        >\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}>\r\n          <Button\r\n            type={AUTH_FORM_CONFIG.type.primary}\r\n            htmlType={AUTH_FORM_CONFIG.htmlType.submit}\r\n            onClick={handleSubmitButton}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div>\r\n        Haven`t account yet?\r\n        <Button>\r\n          <Link to={`${match.path}/signup`}>Sign Up</Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const SignIn = React.memo(SignInComponent)\r\n","import React from 'react'\r\nimport { useRouteMatch } from 'react-router'\r\nimport { Route } from 'react-router'\r\nimport { SignUp } from '../components/Auth/SignUp/index'\r\nimport { SignIn } from '../components/Auth/SignIn/index'\r\n\r\nconst AuthRouterComponent = () => {\r\n  const { path } = useRouteMatch()\r\n  return (\r\n    <>\r\n      <Route exact path={path} component={SignIn} />\r\n      <Route path={`${path}/signup`} component={SignUp} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const AuthRouter = React.memo(AuthRouterComponent)\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { PATH_ROUTES } from '../constants/routePaths'\r\nimport { AppRouter } from './AppRouter'\r\nimport { AuthRouter } from './AuthRouter'\r\n\r\nconst ToDoRouterComponent = () => {\r\n  const user = useSelector((state) => state.userInfo.userInfo.uid)\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path={PATH_ROUTES.MAIN}>\r\n          <Redirect to={user ? PATH_ROUTES.APP : PATH_ROUTES.AUTH} />\r\n        </Route>\r\n        <Route\r\n          path={PATH_ROUTES.APP}\r\n          render={() =>\r\n            user ? <AppRouter /> : <Redirect to={PATH_ROUTES.AUTH} />\r\n          }\r\n        />\r\n        <Route\r\n          path={PATH_ROUTES.AUTH}\r\n          render={() =>\r\n            user ? <Redirect to={PATH_ROUTES.APP} /> : <AuthRouter />\r\n          }\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport const ToDoRouter = React.memo(ToDoRouterComponent)\r\n","import 'antd/dist/antd.css'\r\nimport React from 'react'\r\nimport { ToDoRouter } from './router/Router'\r\n\r\nfunction App() {\r\n  return <ToDoRouter />\r\n}\r\n\r\nexport default App\r\n","import { FOCUS, SET_ISLOADING } from '../../constants/reduxTypes'\r\n\r\nconst initialState = {\r\n  focusedId: '',\r\n  isLoading: false,\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOCUS:\r\n      return { ...state, focusedId: action.payload }\r\n    case SET_ISLOADING:\r\n      return { ...state, isLoading: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { CHANGE_DATE } from '../../constants/reduxTypes'\r\n\r\nconst initialState = {\r\n  today: new Date(),\r\n  selectedDate: new Date(),\r\n}\r\n\r\nexport const dateReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_DATE:\r\n      return { ...state, selectedDate: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GET_TODOS,\r\n  CLEAR_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n} from '../../constants/reduxTypes'\r\n\r\nconst initialState = {\r\n  todos: [],\r\n}\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      return { ...state, todos: action.payload }\r\n    case CLEAR_TODOS:\r\n      return { ...state, todos: action.payload }\r\n    case ADD_TODO:\r\n      return { ...state }\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.slice(\r\n            0,\r\n            state.todos.findIndex((item) => item.id === action.payload)\r\n          ),\r\n          ...state.todos.slice(\r\n            state.todos.findIndex((item) => item.id === action.payload) + 1\r\n          ),\r\n        ],\r\n      }\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.slice(\r\n            0,\r\n            state.todos.findIndex((item) => item.id === action.payload.id)\r\n          ),\r\n          action.payload,\r\n          ...state.todos.slice(\r\n            state.todos.findIndex((item) => item.id === action.payload.id) + 1\r\n          ),\r\n        ],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  CONFIRM_ERROR,\r\n  LOGIN,\r\n  LOGOUT,\r\n  SIGN_UP,\r\n} from '../../constants/reduxTypes'\r\n\r\nconst initialState = {\r\n  userInfo: {},\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return { ...state, userInfo: action.payload }\r\n    case LOGOUT:\r\n      return { userInfo: action.payload }\r\n    case SIGN_UP:\r\n      return { userInfo: action.payload }\r\n    case CONFIRM_ERROR:\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { appReducer } from './appReducer/reducer'\r\nimport { dateReducer } from './dateReducer/reducer'\r\nimport { todosReducer } from './todosReducer/reducer'\r\nimport { userReducer } from './userReducer/reducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  todos: todosReducer,\r\n  userInfo: userReducer,\r\n  app: appReducer,\r\n  date: dateReducer,\r\n})\r\n","import thunk from 'redux-thunk'\r\nimport { loadState, saveState } from '../services/localStorage'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { rootReducer } from './rootReducer'\r\n\r\nconst persistedState = loadState()\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n)\r\n\r\nstore.subscribe(() => {\r\n  saveState({\r\n    userInfo: store.getState().userInfo,\r\n  })\r\n})\r\n","import { openNotification } from '../../utils/notification'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) {\r\n      return {}\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (err) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('state', serializedState)\r\n  } catch (err) {\r\n    openNotification('error', err.name, err.message)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/appStore'\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'))\r\n"],"sourceRoot":""}