{"version":3,"sources":["Router/RoutePaths.js","firebase/firebase.js","redux/reduxTypes.js","notification.js","redux/actions.js","ToDo/ToDo.js","Calendar/TasksBadge.jsx","Calendar/CalendarItem.js","Calendar/Calendar.js","ToDo/NewToDoForm.jsx","ToDo/ToDoList.jsx","Auth/LogOutButton.js","Router/AppRouter.js","Auth/authFormConfig.js","Auth/SignIn.jsx","Auth/SignUp.jsx","Router/AuthRouter.js","Router/Router.js","App.js","redux/appReducer.js","redux/dateReducer.js","redux/todosReducer.js","redux/userReducer.js","redux/rootReducer.js","redux/store.js","localStorage.js","index.js"],"names":["PATH_ROUTES","console","log","process","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","GET_TODOS","ADD_TODO","DELETE_TODO","CLEAR_TODOS","UPDATE_TODO","LOGIN","LOGOUT","SIGN_UP","CONFIRM_ERROR","FOCUS","CHANGE_DATE","openNotification","type","message","description","notification","placement","getTodos","uid","dispatch","a","response","collection","where","todos","get","then","querySnapshot","forEach","doc","data","firestoreId","id","payload","catch","e","updateToDo","todo","title","status","newToDo","date","update","error","changeFocus","Todo","useState","updateTitle","setUpdateTitle","updateDesc","setUpdateDesc","useDispatch","focusedId","useSelector","state","app","className","shape","icon","CheckOutlined","onClick","text","Meta","onChange","target","value","danger","docId","delete","TasksBadge","day","completedTasks","filter","item","Date","seconds","getDate","getMonth","pendingTasks","length","WEEK_DAYS","MONTH_NAMES","CalendarItem","newDate","find","_","index","getDay","today","color","Calendar","lastDayToDisplay","setMonth","daysValues","days","push","setDate","fillDays","map","NewToDoForm","newTitle","setNewTitle","newDesc","setNewDesc","userInfo","Item","label","TextArea","getTime","add","addToDo","selectedDate","ToDoList","isLoading","setIsLoading","useEffect","toDateString","LogOutButton","auth","signOut","AppRouter","path","useRouteMatch","exact","component","AUTH_FORM_CONFIG","name","basic","username","password","confirm_password","remember","Username","Password","Confirm","labelCol","Form","span","wrapperCol","Form_Item","offset","initialValues","rules","required","valuePropName","checked","primary","htmlType","submit","SignIn","email","setEmail","setPassword","match","signInWithEmailAndPassword","userCredential","user","loginEmail","to","SignUp","confirmPassword","setConfirmPassword","confirm","createUserWithEmailAndPassword","createUserWithEmail","AuthRouter","ToDoRouter","history","render","App","initialState","rootReducer","combineReducers","action","slice","findIndex","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0e594282.chunk.js","sourcesContent":["export const PATH_ROUTES = {\r\n  APP: '/app',\r\n  AUTH: '/auth',\r\n  MAIN: '/',\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nconsole.log(process.env)\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nexport const db = firebase.firestore()\r\n","export const GET_TODOS = 'DATA/GET_TODOS'\r\nexport const ADD_TODO = 'DATA/ADD_TODO'\r\nexport const DELETE_TODO = 'DATA/DELETE_TODO'\r\nexport const CLEAR_TODOS = 'DATA/CLEAR_TODOS'\r\nexport const UPDATE_TODO = 'DATA/UPDATE_TODOS'\r\nexport const LOGIN = 'USER/LOGIN'\r\nexport const LOGOUT = 'USER/LOGOUT'\r\nexport const SIGN_UP = 'USER/SIGN_UP'\r\nexport const CONFIRM_ERROR = 'USER/CONFIRM_ERROR'\r\nexport const FOCUS = 'APP/FOCUS'\r\nexport const CHANGE_DATE = 'DATE/CHANGE_DATE'\r\n","import { notification } from 'antd'\r\n\r\nexport const openNotification = (type, message, description) => {\r\n  notification[type]({\r\n    message: message,\r\n    description: description,\r\n    placement: 'bottomLeft',\r\n  })\r\n}\r\n","import { db } from '../firebase/firebase'\r\nimport {\r\n  ADD_TODO,\r\n  CHANGE_DATE,\r\n  CLEAR_TODOS,\r\n  CONFIRM_ERROR,\r\n  DELETE_TODO,\r\n  FOCUS,\r\n  GET_TODOS,\r\n  LOGIN,\r\n  LOGOUT,\r\n  SIGN_UP,\r\n  UPDATE_TODO,\r\n} from './reduxTypes'\r\nimport firebase from 'firebase'\r\nimport { openNotification } from '../notification'\r\n\r\nexport function getTodos(uid) {\r\n  return async (dispatch) => {\r\n    const response = db.collection('todos').where('uid', '==', uid)\r\n    let todos = []\r\n    try {\r\n      await response\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            todos = [...todos, { ...doc.data(), firestoreId: doc.id }]\r\n          })\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: GET_TODOS, payload: todos })\r\n        })\r\n        .catch((e) => {\r\n          throw e\r\n        })\r\n    } catch (e) {\r\n      openNotification('error', 'Error loading data', e.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addToDo(title, description, uid, day) {\r\n  return async (dispatch) => {\r\n    const response = db.collection('todos')\r\n    const todo = {\r\n      title: title,\r\n      id: new Date().getTime(),\r\n      description: description,\r\n      uid: uid,\r\n      status: 'inprogress',\r\n      date: day,\r\n    }\r\n    try {\r\n      await response\r\n        .add(todo)\r\n        .then(() => {\r\n          dispatch({ type: ADD_TODO, payload: todo })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      openNotification('error', 'Error adding document', e.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateToDo(todo, title, description, status) {\r\n  return async (dispatch) => {\r\n    const response = db.collection('todos')\r\n    const newToDo = {\r\n      title: title,\r\n      description: description,\r\n      id: todo.id,\r\n      uid: todo.uid,\r\n      firestoreId: todo.firestoreId,\r\n      status: status,\r\n      date: todo.date,\r\n    }\r\n    try {\r\n      await response\r\n        .doc(todo.firestoreId)\r\n        .update({\r\n          title: title,\r\n          description: description,\r\n          status: status,\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: UPDATE_TODO, payload: newToDo })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      openNotification('error', 'Error updating document', e.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteToDo(docId, id) {\r\n  return async (dispatch) => {\r\n    const response = db.collection('todos')\r\n    try {\r\n      await response\r\n        .doc(docId)\r\n        .delete()\r\n        .then(() => {\r\n          openNotification('success', 'Task deleted!')\r\n        })\r\n        .then(() => {\r\n          dispatch({ type: DELETE_TODO, payload: id })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      console.log(e)\r\n      openNotification('error', 'Error removing task!', e.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loginEmail(email, password) {\r\n  return async (dispatch) => {\r\n    await firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        const user = userCredential.user\r\n        dispatch({ type: LOGIN, payload: user })\r\n      })\r\n      .catch((error) => {\r\n        openNotification('error', 'Login error', error.message)\r\n      })\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  return async (dispatch) => {\r\n    try {\r\n      await firebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          dispatch({ type: LOGOUT, payload: {} })\r\n        })\r\n        .catch((error) => {\r\n          throw error\r\n        })\r\n    } catch (e) {\r\n      openNotification('error', 'LogOut error', e.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport function clearTodoList() {\r\n  return {\r\n    type: CLEAR_TODOS,\r\n    payload: [],\r\n  }\r\n}\r\n\r\nexport function createUserWithEmail(email, password, confirm) {\r\n  if (password === confirm) {\r\n    return async (dispatch) => {\r\n      await firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((userCredential) => {\r\n          const user = userCredential.user\r\n          dispatch({ type: SIGN_UP, payload: user })\r\n        })\r\n        .catch((error) => {\r\n          openNotification('error', 'Sign Up error!', error.message)\r\n        })\r\n    }\r\n  } else {\r\n    openNotification(\r\n      'error',\r\n      'Passwords didn`t match!',\r\n      'Please, check that passwords in password and confirm fields are similar'\r\n    )\r\n    return {\r\n      type: CONFIRM_ERROR,\r\n    }\r\n  }\r\n}\r\n\r\nexport function changeFocus(id) {\r\n  return {\r\n    type: FOCUS,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nexport function changeDate(newDate) {\r\n  return {\r\n    type: CHANGE_DATE,\r\n    payload: newDate,\r\n  }\r\n}\r\n","import './ToDo.css'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Input, Button, Badge } from 'antd'\r\nimport { updateToDo, deleteToDo, changeFocus } from '../redux/actions'\r\nimport { CheckOutlined } from '@ant-design/icons'\r\nimport { openNotification } from '../notification'\r\n\r\nexport const Todo = (todo) => {\r\n  const [updateTitle, setUpdateTitle] = useState('')\r\n  const [updateDesc, setUpdateDesc] = useState('')\r\n  const dispatch = useDispatch()\r\n  const focusedId = useSelector((state) => state.app)\r\n\r\n  const status = (status) => {\r\n    if (status === 'inprogress') {\r\n      return (\r\n        <div className='todo_status'>\r\n          <Button\r\n            className='button_done'\r\n            type='default'\r\n            shape='round'\r\n            icon={<CheckOutlined />}\r\n            onClick={() =>\r\n              dispatch(\r\n                updateToDo(\r\n                  todo.todo,\r\n                  todo.todo.title,\r\n                  todo.todo.description,\r\n                  'done'\r\n                )\r\n              )\r\n            }\r\n          >\r\n            Complete\r\n          </Button>\r\n          <Badge status='default' text='Active' />\r\n        </div>\r\n      )\r\n    } else if (status === 'done') {\r\n      return (\r\n        <div className='todo_status'>\r\n          <Badge status='success' text='Completed' />\r\n        </div>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      {status(todo.todo.status)}\r\n      <Card.Meta title={todo.todo.title} description={todo.todo.description} />\r\n\r\n      {focusedId === todo.todo.id ? (\r\n        <>\r\n          <Input\r\n            onChange={(e) => setUpdateTitle(e.target.value)}\r\n            value={updateTitle}\r\n          />\r\n\r\n          <Input\r\n            onChange={(e) => setUpdateDesc(e.target.value)}\r\n            value={updateDesc}\r\n          />\r\n          <Button\r\n            onClick={() => {\r\n              if (!updateTitle && !updateDesc) {\r\n                openNotification('warning', 'Both fields is empty')\r\n              } else {\r\n                dispatch(\r\n                  updateToDo(\r\n                    todo.todo,\r\n                    updateTitle ? updateTitle : todo.todo.title,\r\n                    updateDesc ? updateDesc : todo.todo.description,\r\n                    todo.todo.status\r\n                  )\r\n                )\r\n                dispatch(changeFocus(''))\r\n                setUpdateTitle('')\r\n                setUpdateDesc('')\r\n              }\r\n            }}\r\n          >\r\n            Update\r\n          </Button>\r\n          <Button onClick={() => dispatch(changeFocus(''))}>Hide</Button>\r\n          <Button\r\n            type='primary'\r\n            danger\r\n            onClick={() => {\r\n              dispatch(deleteToDo(todo.todo.firestoreId, todo.todo.id))\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <Button onClick={() => dispatch(changeFocus(todo.todo.id))}>\r\n          More\r\n        </Button>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Badge } from 'antd'\r\nimport './TasksBadge.css'\r\n\r\nexport const TasksBadge = (day) => {\r\n  const todos = useSelector((state) => state.todos.todos)\r\n\r\n  const completedTasks = todos.filter((item) => {\r\n    return (\r\n      new Date(item.date.seconds * 1000).getDate() === day.day.getDate() &&\r\n      new Date(item.date.seconds * 1000).getMonth() === day.day.getMonth() &&\r\n      item.status === 'done'\r\n    )\r\n  })\r\n\r\n  const pendingTasks = todos.filter((item) => {\r\n    return (\r\n      new Date(item.date.seconds * 1000).getDate() === day.day.getDate() &&\r\n      new Date(item.date.seconds * 1000).getMonth() === day.day.getMonth() &&\r\n      item.status === 'inprogress'\r\n    )\r\n  })\r\n\r\n  return completedTasks.length || pendingTasks.length ? (\r\n    <div className='badges-wrapper'>\r\n      <Badge status='success' text={completedTasks.length} />\r\n      <Badge status='default' text={pendingTasks.length} />\r\n    </div>\r\n  ) : null\r\n}\r\n","import React from 'react'\r\nimport { Card, Tag } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeDate } from '../redux/actions'\r\nimport { TasksBadge } from './TasksBadge'\r\n\r\nconst WEEK_DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\nconst MONTH_NAMES = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n]\r\n\r\nexport const CalendarItem = (day) => {\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <Card\r\n      className='calendar-item'\r\n      onClick={() => dispatch(changeDate(day.day))}\r\n    >\r\n      <Card.Meta\r\n        title={day.day.getDate()}\r\n        description={MONTH_NAMES.find(\r\n          (_, index) => index === day.day.getMonth()\r\n        )}\r\n      />\r\n      <div>{WEEK_DAYS.find((_, index) => index === day.day.getDay())}</div>\r\n      <TasksBadge day={day.day} />\r\n      {day.day.getDate() === day.today.getDate() &&\r\n      day.day.getMonth() === day.today.getMonth() ? (\r\n        <Tag color='purple'>Today</Tag>\r\n      ) : null}\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './Calendar.css'\r\nimport { CalendarItem } from './CalendarItem'\r\n\r\nexport const Calendar = () => {\r\n  const [today] = useState(new Date())\r\n  const [lastDayToDisplay] = useState(new Date())\r\n\r\n  lastDayToDisplay.setMonth(today.getMonth() + 1)\r\n\r\n  const fillDays = () => {\r\n    const days = []\r\n    const day = new Date(today)\r\n    do {\r\n      days.push(new Date(day))\r\n      day.setDate(day.getDate() + 1)\r\n    } while (\r\n      day.getMonth() !== lastDayToDisplay.getMonth() ||\r\n      day.getDate() <= lastDayToDisplay.getDate()\r\n    )\r\n    return days\r\n  }\r\n  const daysValues = fillDays()\r\n\r\n  return (\r\n    <div className='calendar_wrapper'>\r\n      {daysValues.map((item, index) => (\r\n        <CalendarItem key={index} day={item} today={today} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import './NewToDo.css'\r\nimport React, { useState } from 'react'\r\nimport { Input, Button, Form } from 'antd'\r\nimport { addToDo, getTodos } from '../redux/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { openNotification } from '../notification'\r\n\r\nexport const NewToDoForm = () => {\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newDesc, setNewDesc] = useState('')\r\n  const uid = useSelector((state) => state.userInfo.userInfo.uid)\r\n  const date = useSelector((state) => state.date)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div className='form-wrapper'>\r\n      <div className='form-container'>\r\n        <Form>\r\n          <h1>Add To Do</h1>\r\n          <Form.Item label='Title'>\r\n            <Input\r\n              onChange={(e) => setNewTitle(e.target.value)}\r\n              value={newTitle}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label='Description'>\r\n            <Input.TextArea\r\n              onChange={(e) => setNewDesc(e.target.value)}\r\n              value={newDesc}\r\n            />\r\n          </Form.Item>\r\n          <Button\r\n            onClick={() => {\r\n              if (!newTitle || !newDesc) {\r\n                openNotification('warning', 'Missing required field')\r\n              } else {\r\n                dispatch(addToDo(newTitle, newDesc, uid, date.selectedDate))\r\n                dispatch(getTodos(uid))\r\n                setNewTitle('')\r\n                setNewDesc('')\r\n              }\r\n            }}\r\n          >\r\n            Add new\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTodos } from '../redux/actions'\r\nimport { Todo } from './ToDo'\r\nimport { Calendar } from '../Calendar/Calendar'\r\nimport { NewToDoForm } from './NewToDoForm'\r\n\r\nexport const ToDoList = () => {\r\n  const dispatch = useDispatch()\r\n  const todos = useSelector((state) => state.todos.todos)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const uid = useSelector((state) => state.userInfo.userInfo.uid)\r\n  const date = useSelector((state) => state.date)\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodos(uid))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false)\r\n  }, [todos])\r\n\r\n  if (isLoading) {\r\n    return null\r\n  } else {\r\n    return (\r\n      <>\r\n        <Calendar />\r\n        <h1>Tasks for {date.selectedDate.toDateString()}</h1>\r\n        {todos.map((item) => {\r\n          return new Date(item.date.seconds * 1000).getDate() ===\r\n            date.selectedDate.getDate() &&\r\n            new Date(item.date.seconds * 1000).getMonth() ===\r\n              date.selectedDate.getMonth() ? (\r\n            <Todo key={item.id} todo={item} />\r\n          ) : null\r\n        })}\r\n        <NewToDoForm />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button } from 'antd'\r\nimport { logout, clearTodoList } from '../redux/actions'\r\n\r\nexport const LogOutButton = () => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        dispatch(logout())\r\n        dispatch(clearTodoList())\r\n      }}\r\n    >\r\n      Log Out\r\n    </Button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router'\r\nimport { useRouteMatch } from 'react-router'\r\nimport { ToDoList } from '../ToDo/ToDoList'\r\nimport { LogOutButton } from '../Auth/LogOutButton'\r\n\r\nexport const AppRouter = () => {\r\n  const { path } = useRouteMatch()\r\n  return (\r\n    <>\r\n      <LogOutButton />\r\n      <Route exact path={path} component={ToDoList} />\r\n    </>\r\n  )\r\n}\r\n","export const AUTH_FORM_CONFIG = {\r\n  name: {\r\n    basic: 'basic',\r\n    username: 'username',\r\n    password: 'password',\r\n    confirm_password: 'confirm_password',\r\n    remember: 'remember',\r\n  },\r\n  label: {\r\n    Username: 'Username',\r\n    Password: 'Password',\r\n    Confirm: 'Confirm Password',\r\n  },\r\n  labelCol: {\r\n    Form: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    Form: {\r\n      span: 16,\r\n    },\r\n    Form_Item: {\r\n      offset: 8,\r\n      span: 16,\r\n    },\r\n  },\r\n  initialValues: {\r\n    remember: true,\r\n  },\r\n  rules: {\r\n    Username: [\r\n      {\r\n        required: true,\r\n        message: 'Please input your username!',\r\n      },\r\n    ],\r\n    Password: [\r\n      {\r\n        required: true,\r\n        message: 'Please input your password!',\r\n      },\r\n    ],\r\n    Confirm: [\r\n      {\r\n        required: true,\r\n        message: 'Please confirm your password!',\r\n      },\r\n    ],\r\n  },\r\n  valuePropName: {\r\n    checked: 'checked',\r\n  },\r\n  type: {\r\n    primary: 'primary',\r\n  },\r\n  htmlType: {\r\n    submit: 'submit',\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { loginEmail } from '../redux/actions'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport './login_logout.css'\r\nimport { AUTH_FORM_CONFIG } from './authFormConfig'\r\n\r\nexport const SignIn = () => {\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const match = useRouteMatch()\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <h1>Sign In page</h1>\r\n      <Form\r\n        name={AUTH_FORM_CONFIG.name.basic}\r\n        labelCol={AUTH_FORM_CONFIG.labelCol.Form}\r\n        wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form}\r\n        initialValues={AUTH_FORM_CONFIG.initialValues}\r\n      >\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Username}\r\n          name={AUTH_FORM_CONFIG.name.username}\r\n          rules={AUTH_FORM_CONFIG.rules.Username}\r\n        >\r\n          <Input onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Password}\r\n          name={AUTH_FORM_CONFIG.name.password}\r\n          rules={AUTH_FORM_CONFIG.rules.Password}\r\n        >\r\n          <Input.Password onChange={(e) => setPassword(e.target.value)} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name={AUTH_FORM_CONFIG.name.remember}\r\n          valuePropName={AUTH_FORM_CONFIG.valuePropName.checked}\r\n          wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}\r\n        >\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}>\r\n          <Button\r\n            type={AUTH_FORM_CONFIG.type.primary}\r\n            htmlType={AUTH_FORM_CONFIG.htmlType.submit}\r\n            onClick={() => {\r\n              dispatch(loginEmail(email, password))\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div>\r\n        Haven`t account yet?\r\n        <Button>\r\n          <Link to={`${match.path}/signup`}>Sign Up</Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react'\r\nimport { createUserWithEmail } from '../redux/actions'\r\nimport { Link } from 'react-router-dom'\r\nimport './login_logout.css'\r\nimport { AUTH_FORM_CONFIG } from './authFormConfig'\r\n\r\nexport const SignUp = () => {\r\n  const dispatch = useDispatch()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <h1>Sign Up page</h1>\r\n      <Form\r\n        name={AUTH_FORM_CONFIG.name.basic}\r\n        labelCol={AUTH_FORM_CONFIG.labelCol.Form}\r\n        wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form}\r\n        initialValues={AUTH_FORM_CONFIG.initialValues}\r\n      >\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Username}\r\n          name={AUTH_FORM_CONFIG.name.username}\r\n          rules={AUTH_FORM_CONFIG.rules.Username}\r\n        >\r\n          <Input onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Password}\r\n          name={AUTH_FORM_CONFIG.name.password}\r\n          rules={AUTH_FORM_CONFIG.rules.Password}\r\n        >\r\n          <Input.Password onChange={(e) => setPassword(e.target.value)} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={AUTH_FORM_CONFIG.label.Confirm}\r\n          name={AUTH_FORM_CONFIG.name.confirm_password}\r\n          rules={AUTH_FORM_CONFIG.rules.Confirm}\r\n        >\r\n          <Input.Password\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name={AUTH_FORM_CONFIG.name.remember}\r\n          valuePropName={AUTH_FORM_CONFIG.valuePropName.checked}\r\n          wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}\r\n        >\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Form.Item wrapperCol={AUTH_FORM_CONFIG.wrapperCol.Form_Item}>\r\n          <Button\r\n            type={AUTH_FORM_CONFIG.type.primary}\r\n            htmlType={AUTH_FORM_CONFIG.htmlType.submit}\r\n            onClick={() => {\r\n              dispatch(createUserWithEmail(email, password, confirmPassword))\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div>\r\n        Already have an account?\r\n        <Button>\r\n          <Link to='/auth'>Sign In</Link>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useRouteMatch } from 'react-router'\r\nimport { Route } from 'react-router'\r\nimport { SignIn } from '../Auth/SignIn'\r\nimport { SignUp } from '../Auth/SignUp'\r\n\r\nexport const AuthRouter = () => {\r\n  const { path } = useRouteMatch()\r\n  return (\r\n    <>\r\n      <Route exact path={path} component={SignIn} />\r\n      <Route path={`${path}/signup`} component={SignUp} />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { PATH_ROUTES } from './RoutePaths'\r\nimport { AppRouter } from './AppRouter'\r\nimport { AuthRouter } from './AuthRouter'\r\n\r\nexport const ToDoRouter = () => {\r\n  const user = useSelector((state) => state.userInfo.userInfo.uid)\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path={PATH_ROUTES.MAIN}>\r\n          <Redirect to={user ? PATH_ROUTES.APP : PATH_ROUTES.AUTH} />\r\n        </Route>\r\n        <Route\r\n          path={PATH_ROUTES.APP}\r\n          render={() =>\r\n            user ? <AppRouter /> : <Redirect to={PATH_ROUTES.AUTH} />\r\n          }\r\n        />\r\n        <Route\r\n          path={PATH_ROUTES.AUTH}\r\n          render={() =>\r\n            user ? <Redirect to={PATH_ROUTES.APP} /> : <AuthRouter />\r\n          }\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n","import './App.css'\r\nimport 'antd/dist/antd.css'\r\nimport React from 'react'\r\nimport { ToDoRouter } from './Router/Router'\r\n\r\nfunction App() {\r\n  return <ToDoRouter />\r\n}\r\n\r\nexport default App\r\n","import { FOCUS } from './reduxTypes'\r\n\r\nconst initialState = {\r\n  focusedId: '',\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOCUS:\r\n      return action.payload\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { CHANGE_DATE } from './reduxTypes'\r\n\r\nconst initialState = {\r\n  today: new Date(),\r\n  selectedDate: new Date(),\r\n}\r\n\r\nexport const dateReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_DATE:\r\n      return { ...state, selectedDate: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GET_TODOS,\r\n  CLEAR_TODOS,\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n} from './reduxTypes'\r\n\r\nconst initialState = {\r\n  todos: [],\r\n}\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      return { todos: action.payload }\r\n    case CLEAR_TODOS:\r\n      return { todos: action.payload }\r\n    case ADD_TODO:\r\n      return { ...state }\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.slice(\r\n            0,\r\n            state.todos.findIndex((item) => item.id === action.payload)\r\n          ),\r\n          ...state.todos.slice(\r\n            state.todos.findIndex((item) => item.id === action.payload) + 1\r\n          ),\r\n        ],\r\n      }\r\n    case UPDATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [\r\n          ...state.todos.slice(\r\n            0,\r\n            state.todos.findIndex((item) => item.id === action.payload.id)\r\n          ),\r\n          action.payload,\r\n          ...state.todos.slice(\r\n            state.todos.findIndex((item) => item.id === action.payload.id) + 1\r\n          ),\r\n        ],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { CONFIRM_ERROR, LOGIN, LOGOUT, SIGN_UP } from './reduxTypes'\r\n\r\nconst initialState = {\r\n  userInfo: {},\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return { ...state, userInfo: action.payload }\r\n    case LOGOUT:\r\n      return { userInfo: action.payload }\r\n    case SIGN_UP:\r\n      return { userInfo: action.payload }\r\n    case CONFIRM_ERROR:\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { appReducer } from './appReducer'\r\nimport { dateReducer } from './dateReducer'\r\nimport { todosReducer } from './todosReducer'\r\nimport { userReducer } from './userReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  todos: todosReducer,\r\n  userInfo: userReducer,\r\n  app: appReducer,\r\n  date: dateReducer,\r\n})\r\n","import thunk from 'redux-thunk'\r\nimport { loadState, saveState } from '../localStorage'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport { rootReducer } from './rootReducer'\r\n\r\nconst persistedState = loadState()\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n)\r\n\r\nstore.subscribe(() => {\r\n  saveState({\r\n    userInfo: store.getState().userInfo,\r\n  })\r\n})\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (err) {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('state', serializedState)\r\n  } catch (err) {\r\n    console.log(err)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './redux/store'\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'))\r\n"],"sourceRoot":""}